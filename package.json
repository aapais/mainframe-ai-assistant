{
  "name": "accenture-mainframe-ai-assistant",
  "version": "1.0.0",
  "description": "Accenture Mainframe AI Assistant - Enterprise Knowledge Management & AI-Powered Search",
  "main": "src/main/main.js",
  "scripts": {
    "fix:all": "sh scripts/fix-all-dependencies.sh",
    "fix:all:windows": "scripts\\fix-all-dependencies.bat",
    "fix:dependencies": "npm cache clean --force && rm -rf node_modules package-lock.json && npm install --force",
    "install:clean": "rm -rf node_modules package-lock.json && npm install",
    "fix:rebuild": "npm rebuild && npx electron-rebuild",
    "rebuild:sqlite": "npm rebuild better-sqlite3 --build-from-source",
    "fix:typescript": "node scripts/fix-typescript-config.js",
    "dev": "vite",
    "build": "vite build",
    "build:main": "tsc --project config/typescript/tsconfig.main.json --skipLibCheck --allowJs",
    "build:main:fixed": "tsc --project config/typescript/tsconfig.main.json --skipLibCheck --allowJs",
    "build:main:production": "tsc -p config/typescript/tsconfig.main.production.json",
    "build:renderer": "node scripts/build-renderer.js",
    "build:electron": "npm run build && electron-builder",
    "preview": "vite preview",
    "electron": "electron .",
    "electron:dev": "electron src/main/main.js",
    "package:win": "npm run build:icons && electron-builder --win --x64",
    "installer:win": "npm run package:win",
    "validate:build": "node scripts/validate-build-setup.js",
    "build:complete": "npm run validate:build && npm run build:icons && npm run package:win",
    "dist": "npm run build:icons && electron-builder",
    "dist:win": "npm run build:icons && electron-builder --win",
    "dist:mac": "npm run build:icons && electron-builder --mac",
    "dist:linux": "npm run build:icons && electron-builder --linux",
    "build:icons": "node scripts/create-icons.js",
    "pack": "electron-builder --dir",
    "release": "npm run dist && npm run upload:artifacts",
    "test": "jest",
    "test:watch": "jest --watch",
    "audit:fix": "npm audit fix --force",
    "test:coverage": "jest --coverage --collectCoverageFrom='src/**/*.{js,jsx,ts,tsx}' --coverageDirectory=coverage --coverageReporters=text,lcov,html",
    "test:build": "jest --testPathPattern=build/",
    "test:build:windows": "jest --testPathPattern=windows-build.test",
    "test:build:macos": "jest --testPathPattern=macos-build.test",
    "test:build:linux": "jest --testPathPattern=linux-build.test",
    "test:performance": "npm run test:performance:unit && npm run test:performance:integration",
    "test:performance:unit": "jest --config jest.performance.config.js --testPathPattern=performance.*unit",
    "test:performance:integration": "jest --config jest.performance.config.js --testPathPattern=performance.*integration",
    "test:security": "node tests/integration/run-security-tests.js",
    "test:security:validation": "jest tests/integration/security-validation.test.ts --verbose",
    "test:performance:e2e": "playwright test --config=playwright.config.ts --project=performance",
    "test:performance:load": "node scripts/performance/load-test.js",
    "test:performance:baseline": "npm run test:performance && node scripts/performance/create-baseline.js",
    "test:performance:comprehensive": "node tests/integration/run-performance-tests.js",
    "test:performance:report": "npm run test:performance:comprehensive && echo 'Performance report generated at tests/integration/performance-report.md'",
    "validate:performance": "node scripts/validate-performance-setup.js",
    "performance:suite": "./scripts/run-performance-suite.sh",
    "build:all": "node scripts/cross-platform-build.js build",
    "build:windows": "node scripts/cross-platform-build.js build win32",
    "build:macos": "node scripts/cross-platform-build.js build darwin",
    "build:linux": "node scripts/cross-platform-build.js build linux",
    "build:check": "node scripts/cross-platform-build.js check",
    "build:validate": "node scripts/cross-platform-build.js validate",
    "build:matrix": "node scripts/cross-platform-build.js matrix",
    "electron:build": "electron-builder",
    "electron:build:win": "electron-builder --win",
    "electron:build:mac": "electron-builder --mac",
    "electron:build:linux": "electron-builder --linux",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src --ext .js,.jsx,.ts,.tsx --fix --quiet",
    "typecheck": "tsc --noEmit --skipLibCheck",
    "validate": "npm run lint && npm run typecheck && npm run format:check && npm run test:coverage && npm run build",
    "validate:quick": "npm run lint && npm run typecheck && npm run test",
    "clean": "node scripts/automation.js clean",
    "clean:full": "node scripts/automation.js clean-full",
    "prebuild": "npm run clean && npm run validate:quick",
    "postbuild": "node scripts/automation.js post-build",
    "format": "prettier --write src/**/*.{js,jsx,ts,tsx,json,css,md,html} --ignore-path .gitignore",
    "format:check": "prettier --check src/**/*.{js,jsx,ts,tsx,json,css,md,html} --ignore-path .gitignore",
    "analyze": "npm run build && npm run bundle-analyzer",
    "bundle-analyzer": "npx webpack-bundle-analyzer dist/assets/*.js",
    "analyze:bundle": "node scripts/analyze-bundle.js",
    "analyze:deps": "node scripts/dependency-size-report.js",
    "analyze:compare": "node scripts/bundle-comparison.js bundle-analysis/bundle-analysis.json",
    "analyze:full": "npm run analyze:bundle && npm run analyze:deps && npm run analyze:compare",
    "budget:check": "node scripts/analyze-bundle.js --max-bundle-size 1048576",
    "performance:compare": "node scripts/performance/compare-results.js",
    "performance:aggregate": "node scripts/performance/aggregate-results.js",
    "performance:quality-gates": "node scripts/performance/quality-gates.js",
    "performance:report": "node scripts/performance/generate-report.js",
    "performance:notify": "node scripts/performance/send-notifications.js",
    "ci:performance": "npm run test:performance && npm run performance:quality-gates",
    "ci:build": "npm run build:check && npm run test:build && npm run build:validate",
    "ci:full": "npm run lint && npm run typecheck && npm run test:coverage && npm run ci:build && npm run performance:quality-gates && npm run build",
    "hooks:install": "npx husky install",
    "pre-commit": "npm run lint:fix && npm run typecheck",
    "prepare": "npx husky install",
    "test:deployment": "jest --config tests/deployment/jest.config.js",
    "test:deployment:watch": "jest --config tests/deployment/jest.config.js --watch",
    "test:deployment:coverage": "jest --config tests/deployment/jest.config.js --coverage",
    "validate:deployment": "node scripts/validate-deployment.js",
    "generate:checksums": "node scripts/checksum-generator.js",
    "scan:security": "node scripts/security-verification.js",
    "monitor:deployment": "node scripts/deployment-monitoring.js",
    "ci:deployment": "npm run test:deployment:coverage && npm run validate:deployment",
    "fix:deps": "node scripts/fix-dependencies.js",
    "fix:vite": "npm run fix:deps && npm run dev",
    "db:generate-test-data": "node src/scripts/generateTestData.js",
    "db:generate-test-data:clear": "node src/scripts/generateTestData.js --clear",
    "db:generate-test-data:custom": "node src/scripts/generateTestData.js --db=",
    "test:data": "npm run db:generate-test-data",
    "test:data:clean": "npm run db:generate-test-data:clear",
    "test:data:demo": "node src/scripts/testDataDemo.js",
    "test:data:validate": "node src/scripts/validateTestData.js"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix --quiet",
      "prettier --write"
    ],
    "*.{json,css,md,html}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx,json}": [
      "git add"
    ]
  },
  "build": {
    "appId": "com.accenture.mainframe-ai-assistant",
    "productName": "Accenture Mainframe AI Assistant",
    "copyright": "Â© 2024 Accenture. All rights reserved.",
    "directories": {
      "output": "dist-packages",
      "buildResources": "build"
    },
    "files": [
      "src/main/main.js",
      "src/main/preload.js",
      "src/main/ipc/**/*",
      "dist/renderer/**/*",
      "index.html",
      "app.js",
      "assets/**/*",
      "package.json",
      "node_modules/**/*",
      "!src/**/*.ts",
      "!src/renderer/**/*",
      "!tests/**/*",
      "!**/*.test.*",
      "!**/*.spec.*",
      "!.git/**/*",
      "!docs/**/*",
      "!scripts/**/*",
      "!*.md",
      "!build/**/*",
      "!dist/main/**/*",
      "!dist/types/**/*"
    ],
    "extraResources": [
      {
        "from": "better-sqlite3/",
        "to": "better-sqlite3/",
        "filter": [
          "**/*"
        ]
      }
    ],
    "extraMetadata": {
      "main": "src/main/main.js"
    },
    "mac": {
      "category": "public.app-category.productivity",
      "icon": "build/icon.icns",
      "target": {
        "target": "dmg",
        "arch": [
          "x64",
          "arm64"
        ]
      },
      "bundleVersion": "1.0.0",
      "minimumSystemVersion": "10.14.0"
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "build/icon.ico",
      "requestedExecutionLevel": "asInvoker",
      "artifactName": "Accenture-Mainframe-AI-Setup.${ext}"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "rpm",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "Office",
      "icon": "build/icon.png",
      "synopsis": "Accenture Mainframe AI Assistant",
      "vendor": "Accenture"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "allowElevation": false,
      "installerIcon": "build/icon.ico",
      "uninstallerIcon": "build/icon.ico",
      "installerHeaderIcon": "build/icon.ico",
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "Accenture Mainframe AI Assistant",
      "menuCategory": "Accenture",
      "artifactName": "Accenture-Mainframe-AI-Setup.${ext}",
      "deleteAppDataOnUninstall": true,
      "perMachine": false,
      "license": "build/license.txt",
      "include": "build/installer.nsh",
      "warningsAsErrors": false,
      "displayLanguageSelector": false,
      "installerLanguages": [
        "en_US"
      ],
      "language": "1033"
    },
    "portable": {
      "artifactName": "${productName}-${version}-Portable.${ext}",
      "requestExecutionLevel": "user"
    },
    "publish": null,
    "compression": "maximum"
  },
  "keywords": [
    "accenture",
    "ai",
    "assistant",
    "mainframe",
    "enterprise",
    "knowledge-management",
    "search",
    "performance",
    "testing",
    "ci-cd"
  ],
  "author": "Accenture <support@accenture.com> (https://www.accenture.com)",
  "license": "Proprietary",
  "dependencies": {
    "axios": "^1.7.7",
    "better-sqlite3": "^8.7.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "express": "^4.21.0",
    "lucide-react": "0.460.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.20.0",
    "tailwind-merge": "^2.0.0",
    "typescript": "~5.2.2",
    "uuid": "^10.0.0",
    "zod": "^3.22.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@types/better-sqlite3": "^7.6.0",
    "@types/electron": "^1.6.12",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.0",
    "@types/node": "^20.11.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.21",
    "brotli-size": "^4.0.0",
    "commander": "^11.0.0",
    "electron": "^26.6.10",
    "electron-builder": "^24.6.0",
    "electron-notarize": "^1.2.2",
    "electron-winstaller": "^5.1.0",
    "eslint": "^8.45.0",
    "eslint-plugin-react": "^7.32.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "glob": "^10.3.0",
    "gzip-size": "^7.0.0",
    "husky": "^8.0.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-html-reporters": "^3.1.0",
    "jest-junit": "^16.0.0",
    "jiti": "^1.21.0",
    "lilconfig": "^3.0.0",
    "lint-staged": "^16.1.6",
    "node-gyp": "^10.0.1",
    "playwright": "^1.40.0",
    "postcss": "^8.4.35",
    "postcss-import": "^16.0.0",
    "postcss-load-config": "^5.0.0",
    "prettier": "^3.0.0",
    "semver": "^7.5.0",
    "sucrase": "^3.35.0",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.2",
    "vite": "^5.4.8",
    "yaml": "^2.5.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "overrides": {
    "better-sqlite3": "^8.7.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "vite": "^5.4.8",
    "tailwindcss": "^3.4.17"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/accenture/mainframe-ai-assistant.git"
  },
  "bugs": {
    "url": "https://www.accenture.com/mainframe-ai-assistant/support"
  },
  "homepage": "https://www.accenture.com/mainframe-ai-assistant",
  "type": "commonjs"
}

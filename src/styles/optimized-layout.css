/**
 * Optimized Layout System CSS
 *
 * Performance-first responsive layout utilities with:
 * - CSS containment for optimal rendering
 * - Container queries for component-level responsiveness
 * - CSS logical properties for international support
 * - Modern CSS features (aspect-ratio, clamp, min/max)
 * - GPU acceleration classes
 * - Critical rendering path optimization
 *
 * @version 3.0.0
 * @performance Optimized for 60fps layout transitions
 */

/* ==========================================================================
   CSS CUSTOM PROPERTIES (Design Tokens)
   ========================================================================== */

:root {
  /* Spacing Scale - Fluid sizing */
  --space-0: 0;
  --space-px: 1px;
  --space-1: clamp(0.25rem, 0.5vw, 0.375rem); /* 4px - 6px */
  --space-2: clamp(0.5rem, 1vw, 0.75rem); /* 8px - 12px */
  --space-3: clamp(0.75rem, 1.5vw, 1rem); /* 12px - 16px */
  --space-4: clamp(1rem, 2vw, 1.25rem); /* 16px - 20px */
  --space-5: clamp(1.25rem, 2.5vw, 1.5rem); /* 20px - 24px */
  --space-6: clamp(1.5rem, 3vw, 2rem); /* 24px - 32px */
  --space-8: clamp(2rem, 4vw, 2.5rem); /* 32px - 40px */
  --space-10: clamp(2.5rem, 5vw, 3rem); /* 40px - 48px */
  --space-12: clamp(3rem, 6vw, 4rem); /* 48px - 64px */
  --space-16: clamp(4rem, 8vw, 5rem); /* 64px - 80px */
  --space-20: clamp(5rem, 10vw, 6rem); /* 80px - 96px */
  --space-24: clamp(6rem, 12vw, 8rem); /* 96px - 128px */

  /* Container Sizes - Fluid max-widths */
  --container-xs: clamp(16rem, 90vw, 20rem); /* 256px - 320px */
  --container-sm: clamp(20rem, 90vw, 36rem); /* 320px - 576px */
  --container-md: clamp(36rem, 90vw, 48rem); /* 576px - 768px */
  --container-lg: clamp(48rem, 90vw, 64rem); /* 768px - 1024px */
  --container-xl: clamp(64rem, 90vw, 80rem); /* 1024px - 1280px */
  --container-2xl: clamp(80rem, 90vw, 96rem); /* 1280px - 1536px */
  --container-prose: clamp(45ch, 50vw, 75ch); /* Optimal reading width */

  /* Aspect Ratios */
  --aspect-square: 1;
  --aspect-video: calc(16 / 9);
  --aspect-wide: calc(21 / 9);
  --aspect-portrait: calc(3 / 4);
  --aspect-golden: 1.618;

  /* Grid Configuration */
  --grid-gap-xs: var(--space-1);
  --grid-gap-sm: var(--space-2);
  --grid-gap-md: var(--space-4);
  --grid-gap-lg: var(--space-6);
  --grid-gap-xl: var(--space-8);
  --grid-gap-xxl: var(--space-12);

  /* Transitions - Performance optimized */
  --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-base: 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  /* Border Radius Scale */
  --radius-sm: clamp(0.125rem, 0.25vw, 0.25rem);
  --radius-md: clamp(0.25rem, 0.5vw, 0.375rem);
  --radius-lg: clamp(0.375rem, 0.75vw, 0.5rem);
  --radius-xl: clamp(0.5rem, 1vw, 0.75rem);
  --radius-2xl: clamp(0.75rem, 1.5vw, 1rem);

  /* Touch Target Sizes */
  --touch-target-min: 44px;
  --touch-target-comfortable: 48px;
  --touch-target-large: 56px;

  /* Z-Index Scale */
  --z-base: 0;
  --z-elevated: 10;
  --z-sticky: 20;
  --z-overlay: 30;
  --z-modal: 40;
  --z-popover: 50;
  --z-tooltip: 60;
}

/* ==========================================================================
   CSS CONTAINMENT - Performance Optimization
   ========================================================================== */

/* Layout containment for grid containers */
.contain-layout {
  contain: layout;
}

/* Style containment for isolated components */
.contain-style {
  contain: style;
}

/* Paint containment for visual effects */
.contain-paint {
  contain: paint;
}

/* Strict containment for maximum isolation */
.contain-strict {
  contain: strict;
}

/* Size containment for intrinsic sizing */
.contain-size {
  contain: size;
}

/* Layout + Style containment (common combination) */
.contain-layout-style {
  contain: layout style;
}

/* ==========================================================================
   CONTAINER QUERIES
   ========================================================================== */

/* Container query types */
.container-inline {
  container-type: inline-size;
}

.container-block {
  container-type: block-size;
}

.container-size {
  container-type: size;
}

/* Named containers for component-level responsiveness */
.container-card {
  container-name: card;
  container-type: inline-size;
}

.container-sidebar {
  container-name: sidebar;
  container-type: inline-size;
}

.container-content {
  container-name: content;
  container-type: inline-size;
}

.container-navigation {
  container-name: navigation;
  container-type: inline-size;
}

/* Container query utilities */
@container card (min-width: 300px) {
  .card-responsive {
    flex-direction: row;
  }

  .card-responsive .card-media {
    width: 40%;
  }

  .card-responsive .card-content {
    width: 60%;
  }
}

@container sidebar (min-width: 250px) {
  .sidebar-responsive .sidebar-item {
    padding-inline: var(--space-4);
  }

  .sidebar-responsive .sidebar-label {
    display: block;
  }
}

@container navigation (max-width: 600px) {
  .nav-responsive .nav-item {
    display: none;
  }

  .nav-responsive .nav-toggle {
    display: flex;
  }
}

/* ==========================================================================
   GPU ACCELERATION
   ========================================================================== */

/* GPU layer promotion for smooth animations */
.gpu-layer {
  will-change: transform;
  transform: translateZ(0);
}

/* GPU acceleration for specific transforms */
.gpu-translate {
  will-change: transform;
  transform: translate3d(0, 0, 0);
}

.gpu-scale {
  will-change: transform, opacity;
  transform: translateZ(0);
}

.gpu-rotate {
  will-change: transform;
  transform: translateZ(0);
}

/* ==========================================================================
   LOGICAL PROPERTIES
   ========================================================================== */

/* Margin logical properties */
.margin-inline-auto {
  margin-inline: auto;
}

.margin-block-auto {
  margin-block: auto;
}

.margin-inline-0 {
  margin-inline: 0;
}
.margin-inline-1 {
  margin-inline: var(--space-1);
}
.margin-inline-2 {
  margin-inline: var(--space-2);
}
.margin-inline-3 {
  margin-inline: var(--space-3);
}
.margin-inline-4 {
  margin-inline: var(--space-4);
}
.margin-inline-6 {
  margin-inline: var(--space-6);
}
.margin-inline-8 {
  margin-inline: var(--space-8);
}

.margin-block-0 {
  margin-block: 0;
}
.margin-block-1 {
  margin-block: var(--space-1);
}
.margin-block-2 {
  margin-block: var(--space-2);
}
.margin-block-3 {
  margin-block: var(--space-3);
}
.margin-block-4 {
  margin-block: var(--space-4);
}
.margin-block-6 {
  margin-block: var(--space-6);
}
.margin-block-8 {
  margin-block: var(--space-8);
}

/* Padding logical properties */
.padding-inline-0 {
  padding-inline: 0;
}
.padding-inline-1 {
  padding-inline: var(--space-1);
}
.padding-inline-2 {
  padding-inline: var(--space-2);
}
.padding-inline-3 {
  padding-inline: var(--space-3);
}
.padding-inline-4 {
  padding-inline: var(--space-4);
}
.padding-inline-6 {
  padding-inline: var(--space-6);
}
.padding-inline-8 {
  padding-inline: var(--space-8);
}

.padding-block-0 {
  padding-block: 0;
}
.padding-block-1 {
  padding-block: var(--space-1);
}
.padding-block-2 {
  padding-block: var(--space-2);
}
.padding-block-3 {
  padding-block: var(--space-3);
}
.padding-block-4 {
  padding-block: var(--space-4);
}
.padding-block-6 {
  padding-block: var(--space-6);
}
.padding-block-8 {
  padding-block: var(--space-8);
}

/* Size logical properties */
.inline-size-full {
  inline-size: 100%;
}
.inline-size-auto {
  inline-size: auto;
}
.inline-size-fit {
  inline-size: fit-content;
}
.inline-size-max {
  inline-size: max-content;
}
.inline-size-min {
  inline-size: min-content;
}

.block-size-full {
  block-size: 100%;
}
.block-size-auto {
  block-size: auto;
}
.block-size-fit {
  block-size: fit-content;
}
.block-size-max {
  block-size: max-content;
}
.block-size-min {
  block-size: min-content;
}

/* Max inline size (responsive widths) */
.max-inline-size-xs {
  max-inline-size: var(--container-xs);
}
.max-inline-size-sm {
  max-inline-size: var(--container-sm);
}
.max-inline-size-md {
  max-inline-size: var(--container-md);
}
.max-inline-size-lg {
  max-inline-size: var(--container-lg);
}
.max-inline-size-xl {
  max-inline-size: var(--container-xl);
}
.max-inline-size-2xl {
  max-inline-size: var(--container-2xl);
}
.max-inline-size-prose {
  max-inline-size: var(--container-prose);
}

/* ==========================================================================
   INTRINSIC SIZING
   ========================================================================== */

/* Intrinsic sizing utilities */
.size-fit {
  width: fit-content;
  height: fit-content;
}

.size-max {
  width: max-content;
  height: max-content;
}

.size-min {
  width: min-content;
  height: min-content;
}

.width-fit {
  width: fit-content;
}
.width-max {
  width: max-content;
}
.width-min {
  width: min-content;
}

.height-fit {
  height: fit-content;
}
.height-max {
  height: max-content;
}
.height-min {
  height: min-content;
}

/* ==========================================================================
   ASPECT RATIO UTILITIES
   ========================================================================== */

.aspect-square {
  aspect-ratio: var(--aspect-square);
}
.aspect-video {
  aspect-ratio: var(--aspect-video);
}
.aspect-wide {
  aspect-ratio: var(--aspect-wide);
}
.aspect-portrait {
  aspect-ratio: var(--aspect-portrait);
}
.aspect-golden {
  aspect-ratio: var(--aspect-golden);
}

/* Custom aspect ratios */
.aspect-1-1 {
  aspect-ratio: 1 / 1;
}
.aspect-4-3 {
  aspect-ratio: 4 / 3;
}
.aspect-16-9 {
  aspect-ratio: 16 / 9;
}
.aspect-21-9 {
  aspect-ratio: 21 / 9;
}
.aspect-3-4 {
  aspect-ratio: 3 / 4;
}

/* ==========================================================================
   FLUID CONTAINERS
   ========================================================================== */

.fluid-container {
  width: 100%;
  margin-inline: auto;
  padding-inline: clamp(1rem, 5vw, 2rem);
}

.fluid-container-xs {
  max-inline-size: var(--container-xs);
}
.fluid-container-sm {
  max-inline-size: var(--container-sm);
}
.fluid-container-md {
  max-inline-size: var(--container-md);
}
.fluid-container-lg {
  max-inline-size: var(--container-lg);
}
.fluid-container-xl {
  max-inline-size: var(--container-xl);
}
.fluid-container-2xl {
  max-inline-size: var(--container-2xl);
}
.fluid-container-prose {
  max-inline-size: var(--container-prose);
}

/* Breakout containers */
.breakout-container {
  width: 100vw;
  margin-inline: calc(50% - 50vw);
}

/* ==========================================================================
   OPTIMIZED GRID SYSTEM
   ========================================================================== */

.optimized-grid {
  display: grid;
  contain: layout;
  gap: var(--grid-gap-md);
}

/* Auto-fit grids with performance optimization */
.grid-auto-fit-xs {
  grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr));
  contain: layout;
}

.grid-auto-fit-sm {
  grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
  contain: layout;
}

.grid-auto-fit-md {
  grid-template-columns: repeat(auto-fit, minmax(min(300px, 100%), 1fr));
  contain: layout;
}

.grid-auto-fit-lg {
  grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));
  contain: layout;
}

.grid-auto-fit-xl {
  grid-template-columns: repeat(auto-fit, minmax(min(400px, 100%), 1fr));
  contain: layout;
}

/* Grid gaps using fluid spacing */
.grid-gap-xs {
  gap: var(--grid-gap-xs);
}
.grid-gap-sm {
  gap: var(--grid-gap-sm);
}
.grid-gap-md {
  gap: var(--grid-gap-md);
}
.grid-gap-lg {
  gap: var(--grid-gap-lg);
}
.grid-gap-xl {
  gap: var(--grid-gap-xl);
}
.grid-gap-xxl {
  gap: var(--grid-gap-xxl);
}

/* Grid item utilities */
.grid-item {
  contain: layout;
  min-width: 0; /* Prevent overflow */
}

/* Dense grid packing */
.grid-dense {
  grid-auto-flow: dense;
}

/* Masonry-like grid */
.grid-masonry {
  grid-template-rows: masonry; /* Future CSS feature */
  grid-auto-rows: max-content; /* Fallback */
}

/* ==========================================================================
   RESPONSIVE UTILITIES
   ========================================================================== */

/* Touch target sizing */
.touch-target {
  min-height: var(--touch-target-min);
  min-width: var(--touch-target-min);
}

.touch-target-comfortable {
  min-height: var(--touch-target-comfortable);
  min-width: var(--touch-target-comfortable);
}

.touch-target-large {
  min-height: var(--touch-target-large);
  min-width: var(--touch-target-large);
}

/* Fluid typography */
.text-fluid-xs {
  font-size: clamp(0.75rem, 1.5vw, 0.875rem);
}
.text-fluid-sm {
  font-size: clamp(0.875rem, 2vw, 1rem);
}
.text-fluid-base {
  font-size: clamp(1rem, 2.5vw, 1.125rem);
}
.text-fluid-lg {
  font-size: clamp(1.125rem, 3vw, 1.25rem);
}
.text-fluid-xl {
  font-size: clamp(1.25rem, 4vw, 1.5rem);
}
.text-fluid-2xl {
  font-size: clamp(1.5rem, 5vw, 2rem);
}
.text-fluid-3xl {
  font-size: clamp(1.875rem, 6vw, 2.5rem);
}

/* ==========================================================================
   LAYOUT PATTERNS
   ========================================================================== */

/* Sidebar layout with CSS Grid */
.layout-sidebar {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: var(--space-6);
  contain: layout;
}

.layout-sidebar-right {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: var(--space-6);
  contain: layout;
}

/* Header-content-footer layout */
.layout-stack {
  display: grid;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
  contain: layout;
}

/* Center layout */
.layout-center {
  display: grid;
  place-items: center;
  min-height: 100vh;
  contain: layout;
}

/* Cluster layout (flex with gap) */
.layout-cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-4);
  align-items: center;
}

/* Stack layout (vertical spacing) */
.layout-vertical-stack > * + * {
  margin-block-start: var(--space-4);
}

/* ==========================================================================
   PERFORMANCE OPTIMIZATIONS
   ========================================================================== */

/* Critical rendering path optimization */
.critical-content {
  contain: strict;
  content-visibility: auto;
}

/* Scroll performance */
.smooth-scroll {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .gpu-layer,
  .optimized-grid,
  .fluid-container {
    will-change: auto;
    transform: none;
    transition: none;
  }

  .smooth-scroll {
    scroll-behavior: auto;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .optimized-grid {
    gap: calc(var(--grid-gap-md) * 1.2);
  }

  .fluid-container {
    border: 1px solid currentColor;
  }
}

/* ==========================================================================
   TOUCH AND POINTER OPTIMIZATIONS
   ========================================================================== */

@media (hover: none) and (pointer: coarse) {
  /* Touch-specific optimizations */
  .touch-target,
  .optimized-grid .grid-item,
  .fluid-container {
    min-height: var(--touch-target-comfortable);
  }

  /* Enhanced scrolling for touch devices */
  .optimized-grid,
  .fluid-container {
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
  }
}

/* ==========================================================================
   PRINT STYLES
   ========================================================================== */

@media print {
  .gpu-layer {
    will-change: auto;
    transform: none;
  }

  .optimized-grid {
    break-inside: avoid;
  }

  .fluid-container {
    max-inline-size: none;
    padding-inline: 0;
  }

  .breakout-container {
    width: 100%;
    margin-inline: 0;
  }
}

/* ==========================================================================
   UTILITY CLASSES
   ========================================================================== */

/* Accessibility utilities */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.focus-visible:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* Layout debugging (development only) */
.debug-grid * {
  outline: 1px solid rgba(255, 0, 0, 0.1);
}

.debug-container {
  background-image:
    linear-gradient(rgba(0, 0, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 255, 0.1) 1px, transparent 1px);
  background-size: var(--space-4) var(--space-4);
}

{
  "$schema": "https://json.schemastore.org/tsconfig",
  
  // Base TypeScript configuration for MVP1 Knowledge-First Platform
  // This is the shared configuration inherited by all other configs
  "compilerOptions": {
    // Language and Environment
    "target": "ES2022",                          // Modern JS features for Electron 28+
    "lib": ["ES2022", "DOM"],                    // ECMAScript + DOM for Node.js globals
    "module": "ESNext",                          // ESM modules for future compatibility
    "moduleResolution": "bundler",               // Optimized for bundlers (Vite/Webpack)
    "resolveJsonModule": true,                   // Import JSON files as modules
    "allowJs": true,                             // Allow JavaScript files
    "checkJs": false,                            // Don't type-check JS files
    
    // Type Safety - Strict Mode for Production Quality
    "strict": true,                               // Enable all strict type checking
    "noImplicitAny": true,                       // Error on implicit any types
    "strictNullChecks": true,                    // Strict null/undefined checking
    "strictFunctionTypes": true,                 // Strict function type checking
    "strictBindCallApply": true,                 // Strict bind/call/apply checking
    "strictPropertyInitialization": true,        // Ensure class properties initialized
    "noImplicitThis": true,                      // Error on implicit this type
    "alwaysStrict": true,                        // Emit 'use strict' for each file
    "useUnknownInCatchVariables": true,          // Default catch clause variables to unknown
    "exactOptionalPropertyTypes": false,         // Disabled to avoid interface conflicts
    
    // Additional Checks for Code Quality
    "noUnusedLocals": true,                      // Error on unused local variables
    "noUnusedParameters": true,                  // Error on unused parameters
    "noImplicitReturns": true,                   // Error when not all paths return
    "noFallthroughCasesInSwitch": true,          // Error on fallthrough switch cases
    "noUncheckedIndexedAccess": true,            // Add undefined to index signatures
    "noImplicitOverride": true,                  // Require override modifier
    "noPropertyAccessFromIndexSignature": true,  // Require indexed access for index signatures
    "allowUnusedLabels": false,                  // No unused labels allowed
    "allowUnreachableCode": false,               // No unreachable code allowed
    
    // Emit Configuration
    "declaration": true,                          // Generate .d.ts files
    "declarationMap": true,                      // Generate .d.ts.map files
    "sourceMap": true,                           // Generate source maps
    "removeComments": false,                     // Keep comments in development
    "newLine": "lf",                             // Unix line endings
    "importHelpers": true,                       // Import emit helpers from tslib
    "verbatimModuleSyntax": false,               // Modern import handling
    "preserveConstEnums": false,                 // Don't preserve const enums
    "stripInternal": true,                       // Strip @internal comments
    
    // Interop Constraints
    "esModuleInterop": true,                     // Enable ES module interop
    "allowSyntheticDefaultImports": true,        // Allow default imports from modules
    "forceConsistentCasingInFileNames": true,    // Ensure consistent file name casing
    "isolatedModules": true,                     // Ensure files can be transpiled in isolation
    
    // Advanced Options for Future MVPs
    "experimentalDecorators": true,              // Enable decorators for MVP4/5
    "emitDecoratorMetadata": true,               // Emit design-type metadata
    "useDefineForClassFields": true,             // Use define for class fields
    "skipLibCheck": true,                        // Skip type checking of .d.ts files
    "skipDefaultLibCheck": true,                 // Skip type checking of default library files
    
    // Path Mapping for Clean Imports
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"],
      "@main/*": ["src/main/*"],
      "@renderer/*": ["src/renderer/*"],
      "@shared/*": ["src/shared/*"],
      "@database/*": ["src/database/*"],
      "@services/*": ["src/services/*"],
      "@components/*": ["src/renderer/components/*"],
      "@hooks/*": ["src/renderer/hooks/*"],
      "@utils/*": ["src/shared/utils/*"],
      "@types/*": ["src/types/*"],
      "@assets/*": ["assets/*"]
    },
    
    // Output Configuration
    "outDir": "./dist",                          // Output directory for compiled files
    "rootDir": ".",                              // Root directory of source files
    "declarationDir": "./dist/types",            // Type declaration directory
    
    // Type Roots
    "typeRoots": [
      "./node_modules/@types",
      "./src/types"
    ],
    
    // Include type definitions - Electron provides its own types since v22+
    "types": [
      "node",
      "react",
      "react-dom",
      "jest",
      "better-sqlite3"
    ]
  },
  
  // File Inclusion/Exclusion Patterns
  "include": [
    "src/**/*",
    "tests/**/*",
    "*.config.ts",
    "*.config.js"
  ],
  
  "exclude": [
    "node_modules",
    "dist",
    "build",
    "*.min.js",
    "coverage",
    "**/*.spec.ts",
    "**/*.test.ts"
  ],
  
  // TypeScript Project References for Monorepo Future
  "references": [],
  
  // Watch Options for Development
  "watchOptions": {
    "watchFile": "useFsEvents",
    "watchDirectory": "useFsEvents",
    "excludeDirectories": [
      "node_modules",
      "dist",
      "build"
    ],
    "excludeFiles": [
      "**/*.log",
      "**/*.db",
      "**/*.sqlite"
    ]
  },
  
  // Build Options
  "ts-node": {
    "compilerOptions": {
      "module": "commonjs"
    }
  }
}
name: Lighthouse CI Performance Testing

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npm install -g @lhci/cli

    - name: Build application
      run: npm run build

    - name: Start application server
      run: |
        npm start &
        sleep 30 # Wait for server to start

    - name: Wait for server to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-reports-${{ matrix.node-version }}
        path: |
          ./reports/lighthouse/
          ./.lighthouseci/
        retention-days: 30

    - name: Comment PR with Lighthouse results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          try {
            const reportsDir = './reports/lighthouse';
            const files = fs.readdirSync(reportsDir);
            const latestReport = files
              .filter(f => f.endsWith('.json'))
              .sort()
              .pop();

            if (latestReport) {
              const report = JSON.parse(
                fs.readFileSync(path.join(reportsDir, latestReport), 'utf8')
              );

              const scores = report.categories;
              const metrics = report.audits;

              const comment = `
              ## 🔍 Lighthouse Performance Report

              ### Performance Scores
              - **Performance**: ${Math.round(scores.performance.score * 100)}%
              - **Accessibility**: ${Math.round(scores.accessibility.score * 100)}%
              - **Best Practices**: ${Math.round(scores['best-practices'].score * 100)}%
              - **SEO**: ${Math.round(scores.seo.score * 100)}%

              ### Core Web Vitals
              - **First Contentful Paint**: ${metrics['first-contentful-paint'].displayValue}
              - **Largest Contentful Paint**: ${metrics['largest-contentful-paint'].displayValue}
              - **Time to Interactive**: ${metrics['interactive'].displayValue}
              - **Cumulative Layout Shift**: ${metrics['cumulative-layout-shift'].displayValue}

              ### Bundle Analysis
              - **Total Bundle Size**: ${metrics['resource-summary'].details.items.find(i => i.resourceType === 'total')?.size || 'N/A'} bytes
              - **JavaScript Size**: ${metrics['resource-summary'].details.items.find(i => i.resourceType === 'script')?.size || 'N/A'} bytes

              [View detailed report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.error('Failed to comment PR:', error);
          }

    - name: Check performance regression
      run: |
        node scripts/lighthouse/check-regression.js

  performance-baseline:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: lighthouse-ci

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Lighthouse reports
      uses: actions/download-artifact@v4
      with:
        name: lighthouse-reports-20.x
        path: ./reports/lighthouse/

    - name: Update performance baseline
      run: |
        node scripts/lighthouse/update-baseline.js

    - name: Commit baseline updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add config/lighthouse/baseline.json
        git diff --staged --quiet || git commit -m "chore: update performance baseline [skip ci]"
        git push
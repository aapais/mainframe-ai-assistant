name: Security Audit & Dependency Check

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  security-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --audit=false

      - name: Run security audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true

      - name: Check for high/critical vulnerabilities
        run: |
          if npm audit --audit-level=high; then
            echo "‚úÖ No high or critical vulnerabilities found"
          else
            echo "‚ùå High or critical vulnerabilities detected!"
            npm audit --audit-level=high
            exit 1
          fi

      - name: Check for outdated packages
        run: |
          npm outdated --json > outdated.json || true
          cat outdated.json

      - name: Validate package.json
        run: |
          node -e "
            const pkg = require('./package.json');
            console.log('‚úÖ Package.json is valid JSON');
            console.log('üì¶ Package:', pkg.name, 'v' + pkg.version);

            // Check for exact versions in critical packages
            const critical = ['electron', 'openai', 'uuid'];
            critical.forEach(dep => {
              const version = pkg.dependencies?.[dep] || pkg.devDependencies?.[dep];
              if (version && version.startsWith('^')) {
                console.warn('‚ö†Ô∏è  Critical package', dep, 'should use exact version');
              } else if (version) {
                console.log('‚úÖ Critical package', dep, 'uses exact version:', version);
              }
            });
          "

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-${{ matrix.node-version }}
          path: |
            audit-results.json
            outdated.json
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          fail-on-scopes: runtime

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: security-audit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test
        continue-on-error: true # Don't fail if tests have issues

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  notify-security-issues:
    name: Notify Security Issues
    runs-on: ubuntu-latest
    needs: security-audit
    if: failure()

    steps:
      - name: Create Issue for Security Vulnerabilities
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® Security vulnerabilities detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## Security Audit Failed

            The automated security audit has detected vulnerabilities that require immediate attention.

            **Actions Required:**
            1. Review the audit results in the workflow logs
            2. Update vulnerable dependencies using \`npm audit fix\`
            3. Test the application after updates
            4. Run \`npm audit\` to verify fixes

            **Workflow:** ${context.workflow}
            **Run ID:** ${context.runId}
            **Commit:** ${context.sha.substring(0, 7)}

            Please address these security issues promptly.
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies', 'high-priority']
            });
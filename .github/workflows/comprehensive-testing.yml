name: Comprehensive Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly performance tests
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'
  CACHE_KEY_VERSION: 'v1'

jobs:
  # Quick validation for fast feedback
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type checking
        run: npm run type-check

      - name: Lint code
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build check
        run: npm run build

  # Unit tests with high coverage requirements
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quick-validation
    timeout-minutes: 20

    strategy:
      matrix:
        test-suite: [search-components, search-engine, database, services]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: |
          case "${{ matrix.test-suite }}" in
            "search-components")
              npm run test -- tests/unit/search/SearchComponents.unit.test.ts --coverage --coverageReporters=lcov
              ;;
            "search-engine")
              npm run test -- tests/unit/search/AdvancedSearchEngine.unit.test.ts --coverage --coverageReporters=lcov
              ;;
            "database")
              npm run test:database:unit
              ;;
            "services")
              npm run test -- tests/unit/services/ --coverage --coverageReporters=lcov
              ;;
          esac

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unit-tests-${{ matrix.test-suite }}
          name: unit-tests-${{ matrix.test-suite }}

  # Integration tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test:integration

  # Quality gates
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Quality validation
        run: echo "âœ… All quality gates passed"
